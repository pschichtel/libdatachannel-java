name: Build

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    name: Build macOS Native Libraries
    strategy:
      matrix:
        include:
          - os: macos-14  # Apple Silicon runner
            classifier: macos-arm64
          - os: macos-13  # Intel runner
            classifier: macos-x86_64
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-tags: 'true'
        fetch-depth: '0'
        submodules: recursive

    - name: Set up JDK 11
      uses: actions/setup-java@v5
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Install dependencies
      run: |
        brew update
        brew upgrade
        brew install cmake conan
        conan --version

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Verify architecture
      run: |
        echo "Running on: $(uname -m)"
        echo "Classifier: ${{ matrix.classifier }}"

    - name: Build native library for host
      run: ./gradlew compileNativeForHost

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: libdatachannel-${{ matrix.classifier }}
        path: |
          build/dockcross/host/native/libdatachannel-java.dylib
        retention-days: 30
        if-no-files-found: error

  build:
    needs: build-macos
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') ) && 'sonatype-central' || null }}
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-tags: 'true'
        fetch-depth: '0'
        submodules: recursive

    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Download macOS ARM64 artifacts
      uses: actions/download-artifact@v5
      with:
        name: libdatachannel-macos-arm64
        path: artifacts/macos-arm64/

    - name: Download macOS x86_64 artifacts
      uses: actions/download-artifact@v5
      with:
        name: libdatachannel-macos-x86_64
        path: artifacts/macos-x86_64/

    - name: Build
      run: |
        prebuilts=(
          -Plibdatachannel.macos-arm64.prebuilt-path=artifacts/macos-arm64/libdatachannel-java.dylib
          -Plibdatachannel.macos-x86_64.prebuilt-path=artifacts/macos-x86_64/libdatachannel-java.dylib
        )
        ./gradlew --no-configuration-cache :githubActions "${prebuilts[@]}"
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        ORG_GRADLE_PROJECT_mavenCentralSnapshotsUsername: ${{ secrets.SONATYPE_USERNAME }}
        ORG_GRADLE_PROJECT_mavenCentralSnapshotsPassword: ${{ secrets.SONATYPE_PASSWORD }}
        MAVEN_CENTRAL_PORTAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        MAVEN_CENTRAL_PORTAL_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
